
实例1：
<!doctype html>
<html>
  <head>
    <meta charset='utf-8'>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.0/jquery.min.js"></script>

    <script>
    $(document).ready(function(){
      $("button").click(function(){
        $.getJSON("/js/getjson.js",function(result) {
          $.each(result,function(i,field){
            $("p").append(field + " ");
          });
        });
      });
    });


    </script>

  </head>

<body>
<button type="button">获得JSON数据</button>
<p></p>
</body>
</html>


getjson.js的内容如下：
{ 
  "firstName": "Bill",
  "lastName": "Gates",
  "age": 60
}


2.定义和用法
通过 HTTP GET 请求载入 JSON 数据。

3.语法

jQuery.getJSON(url,data,success(data,status,xhr))

url 	                    必需。规定将请求发送的哪个 URL。
data 	                    可选。规定连同请求发送到服务器的数据。
success(data,status,xhr) 	可选。规定当请求成功时运行的函数。

额外的参数：

    response - 包含来自请求的结果数据
    status - 包含请求的状态
    xhr - 包含 XMLHttpRequest 对象


4.详细说明

该函数是简写的 Ajax 函数，等价于：

$.ajax({
  url: url,
  data: data,
  success: callback,
  dataType: json
});

发送到服务器的数据可作为查询字符串附加到 URL 之后。如果 data 参数的值是对象（映射），那么在附加到 URL 之前将转换为字符串，并进行 URL 编码。

传递给 callback 的返回数据，可以是 JavaScript 对象，或以 JSON 结构定义的数组，并使用 $.parseJSON() 方法进行解析


示例

从 test.js 载入 JSON 数据并显示 JSON 数据中一个 name 字段数据：

$.getJSON("test.js", function(json){
  alert("JSON Data: " + json.users[3].name);
});

更多示例
例子 1

从 Flickr JSONP API 载入 4 张最新的关于猫的图片：

HTML 代码：

<div id="images"></div>

jQuery 代码：

$.getJSON("http://api.flickr.com/services/feeds/photos_public.gne?
tags=cat&tagmode=any&format=json&jsoncallback=?", function(data){
  $.each(data.items, function(i,item){
    $("<img/>").attr("src", item.media.m).appendTo("#images");
    if ( i == 3 ) return false;
  });
});

例子 2

从 test.js 载入 JSON 数据，附加参数，显示 JSON 数据中一个 name 字段数据：

$.getJSON("test.js", { name: "John", time: "2pm" }, function(json){
  alert("JSON Data: " + json.users[3].name);
});


由于JSON用得越来越普遍，所以jQuery也提供了getJSON()方法来快速通过GET获取一个JSON对象：

var jqxhr = $.getJSON('/path/to/resource', {
    name: 'Bob Lee',
    check: 1
}).done(function (data) {
    // data已经被解析为JSON对象了
});


UPDATE BY SHENGKAI 2017-7-2 20：34
































