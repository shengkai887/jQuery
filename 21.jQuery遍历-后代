
后代是子、孙、曾孙等等。

通过 jQuery，您能够向下遍历 DOM 树，以查找元素的后代。

向下遍历

1.向下遍历 DOM 树

下面是两个用于向下遍历 DOM 树的 jQuery 方法：

    children()
    find()


2.jQuery children() 方法

children() 方法返回被选元素的所有直接子元素。

该方法只会向下一级对 DOM 树进行遍历。

您也可以使用可选参数来过滤对子元素的搜索。

下面的例子返回类名为 "1" 的所有 <p> 元素，并且它们是 <div> 的直接子元素：

$(document).ready(function(){
  $("div").children("p.1");
});


3.jQuery find() 方法

find() 方法返回被选元素的后代元素，一路向下直到最后一个后代。



4.实例测试ALL

<html>
<head>
  <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.0/jquery.min.js">
  </script>

  <script>
$(document).ready(function() {
  //返回每个 <div> 元素的所有直接子元素：
  $("div").children().css({"color":"red","border":"2px solid red"});
  //返回类名为 "cls" 的所有 <p> 元素，并且它们是 <div> 的直接子元素：
  $("div").children("p.cls1").css({"color":"blue","border":"2px solid blue"});
  //返回属于 <div> 后代的所有 <span> 元素
  $("div").find("span").css({"color":"yellow","border":"2px solid yellow"});
  //返回 id=test的元素的所有后代：
  $("#test").find("*").css({"color":"black","border":"2px solid black"});
});

  </script>
<style>
.descendants *
{
  display:block;
  border 2px solid grey;
  color:grey;
  padding:10px;
  margin:10px;
}
</style>
<head>

<body>

<div class="descendants" style="width:500px;">div(当前元素)

<p id="test"class="cls1">p(子元素)
  <span>span(孙)</span>
</p>
<p class="cls2">p(child)
  <span>span(孙)</span>
</p>

</div>
</body>
</html>




UPDATE BY SHENGKAI 2017-6-18 18：44 PM 








